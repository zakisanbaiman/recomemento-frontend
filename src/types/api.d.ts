/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AppController_getHello"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all books */
        get: operations["BooksController_findAll"];
        put?: never;
        /** Create a new book */
        post: operations["BooksController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/books/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a book by id */
        get: operations["BooksController_findOne"];
        put?: never;
        post?: never;
        /** Delete a book */
        delete: operations["BooksController_remove"];
        options?: never;
        head?: never;
        /** Update a book */
        patch: operations["BooksController_update"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateBookDto: {
            /**
             * @description The title of the book
             * @example The Great Gatsby
             */
            title: string;
            /**
             * @description The author of the book
             * @example F. Scott Fitzgerald
             */
            author: string;
            /**
             * @description The genre of the book
             * @example Fiction
             */
            genre: string;
            /**
             * @description The type of the book
             * @example Novel
             */
            type: string;
            /**
             * @description The purpose of the book
             * @example Entertainment
             */
            purpose: string;
            /**
             * @description The description of the book
             * @example A story of the fabulously wealthy Jay Gatsby and his love for the beautiful Daisy Buchanan.
             */
            description: string;
        };
        UpdateBookDto: {
            /**
             * @description The title of the book
             * @example The Great Gatsby
             */
            title?: string;
            /**
             * @description The author of the book
             * @example F. Scott Fitzgerald
             */
            author?: string;
            /**
             * @description The genre of the book
             * @example Fiction
             */
            genre?: string;
            /**
             * @description The type of the book
             * @example Novel
             */
            type?: string;
            /**
             * @description The purpose of the book
             * @example Entertainment
             */
            purpose?: string;
            /**
             * @description The description of the book
             * @example A story of the fabulously wealthy Jay Gatsby and his love for the beautiful Daisy Buchanan.
             */
            description?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getHello: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BooksController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return all books. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BooksController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateBookDto"];
            };
        };
        responses: {
            /** @description The book has been successfully created. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BooksController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return the book. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BooksController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The book has been successfully deleted. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BooksController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateBookDto"];
            };
        };
        responses: {
            /** @description The book has been successfully updated. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
